push #30
push #20
push #10
call [Func_main]
add SP, #3

; public type Var_HELLO = [SP]
mov [12000h], #0

; public type Var_hello = [SP]
mov [12001h], #0

; global type Var_etst = [SP]
mov [12002h], #10

; func return type is `func`
Func_main:
pushr
mov ZX, SP
add SP, #8

; local type Var_A = [SP]
inc SP
mov [11000h], [SP]

; local type Var_B = [SP]
inc SP
mov [11001h], [SP]

; local type Var_C = [SP]
inc SP
mov [11002h], [SP]
mov SP, ZX

; local type Var_ABC = [SP]
mov [12003h], #0
mov [73731], [69632]

mov 73731, #0
push #20
push #10
call [Func_add]
push ZX

; local type Var_ABC = [SP]
inc SP
mov [12003h], [SP]

; Exit
mov AX, [69632]
int #0

mov 69632, #0

mov 69633, #0

mov 69634, #0

mov 73731, #0

; close_curly
popr
ret #3

; func return type is `word`
Func_add:
pushr
mov ZX, SP
add SP, #8

; local type Var_NumberA = [SP]
inc SP
mov [11003h], [SP]

; local type Var_NumberB = [SP]
inc SP
mov [11004h], [SP]
mov SP, ZX

push ZX
push AX
push #0 ; result buffer
push [69635]
push [69636]
pop AX
pop ZX
add ZX, AX
add [SP], ZX
pop R0 ; result buffer
pop AX
pop ZX
push R0

; local type Var_Result = [SP]
inc SP
mov [12000h], [SP]

mov R0, [73728]

mov 69635, #0

mov 69636, #0

mov 73728, #0

; close_curly
popr
mov ZX R0
ret #2
