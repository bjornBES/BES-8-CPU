; 1 byte Disk (0 - 6)
; 2 short Page
; 3 byte sector
.global Read:
 PUSHR

 mov ZX SP

 add SP #8

 pop Ah ; sector
 pop X  ; page
 pop Al ; Disk

 mov SP ZX

 clf #3
 add AL #Ah

 ; read sector
 int #Ch

 POPR
 ret #3

; 1 byte Disk (0 - 13)
; 2 sohrt Page
; 3 short Address
; 4 ushort data
.global Write:
 PUSHR

 mov ZX SP

 add SP #8

 pop BX
 pop AL
 pop CX
 pop DL

 mov SP ZX

 int #Bh

 POPR
 ret #4

; offseted by size of Name + 2
; stack Name (string with 0)
; disk (0 - 13)
; deep (1 - 255) where root is 1
; return Addr (ZX)
.global GetFile:

 rts

.include src/asm/math

.org 37000h
Text_Buffer: