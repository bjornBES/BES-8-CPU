; 1 byte Disk (0 - 6)
; 2 short Page
; 3 byte sector
.global Read:
 PUSHR

 mov ZX, SP

 add SP, #8

 pop AH ; sector
 pop X  ; page
 pop AL ; Disk

 mov SP, ZX

 clf #3
 add AL, #Ah

 ; read sector
 int #EAh

 POPR
 ret #3

; 1 byte Disk (0 - 13)
; 2 sohrt Page
; 3 short Address
; 4 ushort data
.global Write:
 PUSHR

 mov ZX, SP

 add SP, #8

 pop BX
 pop AL
 pop CX
 pop DL

 mov SP, ZX

 int #EBh

 POPR
 ret #4

.include ./src/asm/math
