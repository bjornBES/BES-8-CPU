.newfile C:\Users\bjorn\Desktop\BES-8-CPU\src\asm\OS\BIOS.Basm
$KB #= 2
$Screen #= 1

_Start_BIOS:
mov 		0020F 00028 000ff 


Post_Loop:
inc 		132FF 00028 
push		032FF 00028 
push		030FF 000fe 
call		111FF 

mov 		0022F 00004 00020 

push		032FF 00028 
push		030FF 000ff 
call		111FF 

mov 		0022F 00024 00004 
mov 		0022F 00014 00020 

cmp 		0b20F 00004 055aa 
jme 		0f1FF 

cmp 		0b20F 00028 0000e 
jne 		0c1FF 
jmp 		0e1FF 

Boot:

jmp 		0e1FF 01000 

Error_Cant_Find_An_Boot_Disk:
mov 		0020F 00001 00000 
mov 		0020F 00000 00000 
mov 		0020F 00020 00001 
Print_Error_Disk_Loop:
mov 		0023F 00002 
jmz 		1a1FF 
mov 		0022F 00021 00020 
mov 		0022F 00000 00002 
call		111FF 
mov 		0022F 00020 00021 
inc 		132FF 00011 
jmp 		0e1FF 


Exit:
mov 		0012F ffffe 00020 
halt		100FF 00000 
jmp 		0e1FF 0004b 

Boot_Disk_Error:
.str "can't find an bootable disk"

.newfile C:\Users\bjorn\Desktop\BES-8-CPU\src\asm\OS\IO.Basm

global COut:
outb		1502F 01001 00000 
rts 		12FFF 


global CIn:
inb 		1602F 01000 00000 
rts 		12FFF 




global PixelOut:
push		032FF 00000 
push		032FF 00007 
mov 		0020F 00007 00001 
mov 		0022F 00020 00018 
add 		0522F 00008 00020 
mov 		003FF 
pop 		042FF 00007 
pop 		042FF 00000 
rts 		12FFF 

.newfile C:\Users\bjorn\Desktop\BES-8-CPU\src\asm\OS\FileTest.Basm




global Read:
push		032FF 00028 
push		032FF 00000 

mov 		0022F 00004 00006 

add 		0520F 00006 00003 

pop 		042FF 00028 
pop 		042FF 00000 

mov 		0022F 00006 00004 


outb		1502F 00010 00000 
add 		0520F 00028 00011 
inb 		1622F 00028 00004 

pop 		042FF 00000 
pop 		042FF 00028 

rts 		12FFF 






global Read_Count:
push		032FF 00008 
push		032FF 00000 
push		032FF 00001 

mov 		0022F 00004 00006 

add 		0520F 00006 00004 

pop 		042FF 00018 
pop 		042FF 00000 
pop 		042FF 00028 

mov 		0022F 00006 00004 


add 		0520F 00028 00011 
Read_Count_Loop:
outb		1502F 00010 00000 
inb 		1622F 00028 00004 
str 		0123F 00021 
inc 		132FF 00011 
dec 		142FF 00018 
jnz 		1b1FF 

pop 		042FF 00001 
pop 		042FF 00000 
pop 		042FF 00008 

rts 		12FFF 





global Write:
push		032FF 00028 
push		032FF 00000 
push		032FF 00001 

mov 		0022F 00004 00006 

add 		0520F 00006 00004 

pop 		042FF 00001 
pop 		042FF 00000 
pop 		042FF 00028 

mov 		0022F 00006 00004 


outb		1502F 00010 00000 
add 		0520F 00028 00010 
outb		1522F 00028 00001 

pop 		042FF 00001 
pop 		042FF 00000 
pop 		042FF 00028 

rts 		12FFF 






global GetFile:
push		032FF 00008 
push		032FF 00009 
push		032FF 00001 
push		032FF 00000 

mov 		0022F 00004 00006 

add 		0520F 00006 00005 

pop 		042FF 00028 
pop 		042FF 00018 

mov 		0022F 00006 00004 


mov 		0020F 00009 0000f 
add 		0520F 00028 00010 

GetFile_Loop:
inc 		132FF 00009 
outb		1502F 00010 00009 
inb 		1622F 00028 00000 


cmp 		0b20F 00000 0005c 
jne 		0c1FF 
dec 		142FF 00018 
jnz 		1b1FF 



mov 		0022F 00004 00006 
add 		0520F 00006 00007 

GetFile_File_Loop:
inc 		132FF 00029 

outb		1502F 00010 00029 
inb 		1622F 00028 00000 

pop 		042FF 00011 
cmp 		0b20F 00011 0005c 
jme 		0f1FF 

mov 		0022F 00011 00011 
jmz 		1a1FF 

cmp 		0b22F 00011 00000 
jne 		0c1FF 

mov 		0023F 00000 
inc 		132FF 00021 

cmp 		0b20F 00021 0000f 
jme 		0f1FF 

jmp 		0e1FF 

GetFile_Retry:
push		032FF 00009 
jmp 		0e1FF 

GetFile_Done:
mov 		0022F 00006 00004 

mov 		0022F 00019 00028 

outb		1502F 00010 00029 
inb 		1622F 00019 00028 

inc 		132FF 00029 
outb		1502F 00010 00029 
inb 		1622F 00019 00018 

sub 		0720F 00018 00030 
sub 		0720F 00028 00030 

rol 		2e20F 00028 00004 
ror 		2f20F 00008 00004 
mov 		0022F 00014 00018 

inc 		132FF 00029 
outb		1502F 00010 00029 
inb 		1622F 00019 00018 

inc 		132FF 00029 
outb		1502F 00010 00029 
inb 		1622F 00019 00028 

sub 		0720F 00018 00030 
sub 		0720F 00028 00030 

rol 		2e20F 00028 00004 
ror 		2f20F 00008 00004 
mov 		0022F 00024 00018 

add 		0520F 00004 00200 

jmp 		0e1FF 

GetFile_Error_Name_Could_Not_Be_Found:
pop 		042FF 00000 
pop 		042FF 00001 
pop 		042FF 00009 
pop 		042FF 00008 
mov 		0020F 00020 00001 
sef 		180FF 00003 
jmp 		0e1FF 


GetFile_Return:
pop 		042FF 00000 
pop 		042FF 00001 
pop 		042FF 00009 
pop 		042FF 00008 

GetFile_Return_With_Error:
rts 		12FFF 





global Get_Continue_Addr:
push		032FF 00000 
push		032FF 00001 
push		032FF 00008 

mov 		0022F 00004 00006 

add 		0520F 00006 00004 

pop 		042FF 00000 
pop 		042FF 00028 

mov 		0022F 00006 00004 


push		032FF 00028 
push		032FF 00000 
push		030FF 00004 
call		111FF 
mov 		0020F 00018 00000 
add 		0520F 00006 00003 
mov 		0023F 00020 
mov 		0023F 00021 
rol 		2e20F 00021 00004 
or  		0922F 00020 00021 
mov 		0023F 00010 
mov 		0023F 00011 
rol 		2e20F 00011 00004 
or  		0922F 00010 00011 
call		111FF 
mov 		0020F 00018 00000 
mov 		0022F 00028 00020 
and 		0820F 00028 0000f 
str 		0123F 00028 
inc 		132FF 00018 
mov 		0022F 00028 00020 
and 		0820F 00028 000f0 
str 		0123F 00028 
inc 		132FF 00018 
mov 		0022F 00028 00010 
and 		0820F 00028 0000f 
str 		0123F 00028 
inc 		132FF 00018 
mov 		0022F 00028 00010 
and 		0820F 00028 000f0 
str 		0123F 00028 

pop 		042FF 00008 
pop 		042FF 00001 
pop 		042FF 00000 

rts 		12FFF 

.newfile C:\Users\bjorn\Desktop\BES-8-CPU\src\asm\math.Basm



global MOD:
push		032FF 00000 
push		032FF 00001 

mov 		0022F 00004 00006 

add 		0520F 00006 00003 

pop 		042FF 00001 
pop 		042FF 00000 

mov 		0022F 00006 00004 


mov 		0022F 00004 00000 



div 		2122F 00000 00001 



mul 		2022F 00000 00001 



sub 		0722F 00000 00004 



mov 		0022F 00004 00000 

pop 		042FF 00001 

pop 		042FF 00000 

rts 		12FFF 



global BinToBcd:
push		032FF 00008 
push		032FF 00004 


push		032FF 00000 
push		030FF 0000a 
call		111FF 
add 		0520F 00006 00002 

mov 		0022F 00028 00024 


div 		2120F 00000 0000a 


push		032FF 00000 
push		030FF 0000a 
call		111FF 
add 		0520F 00006 00002 

rol 		2e20F 00024 00004 

or  		0922F 00028 00024 


div 		2120F 00000 0000a 


push		032FF 00000 
push		030FF 0000a 
call		111FF 
add 		0520F 00006 00002 

mov 		0022F 00018 00024 


div 		2120F 00000 0000a 


push		032FF 00000 
push		030FF 0000a 
call		111FF 
add 		0520F 00006 00002 

rol 		2e20F 00024 00004 

or  		0922F 00018 00024 


div 		2120F 00000 0000a 

push		032FF 00000 
mov 		0022F 00000 00008 
pop 		042FF 00001 
pop 		042FF 00004 
pop 		042FF 00008 
rts 		12FFF 

.org 37000h
Text_Buffer:

.newfile C:\Users\bjorn\Desktop\BES-8-CPU\src\asm\OS\BootLoader.Basm
.org 01000h






mov 		0020F 00000 00000 
mov 		0020F 00008 00000 

Write_Message_Loop:
mov 		0023F 00000 
jmz 		1a1FF 
inc 		132FF 00008 
call		111FF 
Exit_Loop:

mov 		0020F 00020 00000 
mov 		0020F 00010 00000 
int 		0dFFF 

Message:
.str "Hello World"

.org 010FEh
.word 55AAh

.org 32000h
VRAM:

